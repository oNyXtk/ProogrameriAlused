import random

MIN_RESOURCE_THRESHOLD = 10  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è "–≤—ã–∂–∏–≤–∞–Ω–∏—è"
RESOURCE_LOSS_PERCENTAGE = 0.2  # 20% —Ç–µ—Ä—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –≤–Ω–∏–∑

class Level:
    def __init__(self, level_number, initial_resources):
        self.level_number = level_number
        self.resources = initial_resources
        self.alive = True

    def receive_resources(self, amount):
        if not self.alive:
            return
        self.resources += amount
        print(f"[–£—Ä–æ–≤–µ–Ω—å {self.level_number}] –ø–æ–ª—É—á–∏–ª {amount:.1f} —Ä–µ—Å—É—Ä—Å–æ–≤. –í—Å–µ–≥–æ: {self.resources:.1f}")

    def transfer_resources(self):
        if not self.alive:
            return 0
        print(f"\n–£—Ä–æ–≤–µ–Ω—å {self.level_number} –∏–º–µ–µ—Ç {self.resources:.1f} —Ä–µ—Å—É—Ä—Å–æ–≤.")
        print("1. –û—Å—Ç–∞–≤–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã —Å–µ–±–µ")
        print("2. –ü–æ–¥–µ–ª–∏—Ç—å—Å—è (50% —Å–µ–±–µ, 50% –ø–µ—Ä–µ–¥–∞—Ç—å)")
        print("3. –ü–µ—Ä–µ–¥–∞—Ç—å –≤—Å—ë –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1/2/3): ")

        if choice == '1':
            return 0
        elif choice == '2':
            to_share = self.resources * 0.5
            self.resources *= 0.5
        elif choice == '3':
            to_share = self.resources
            self.resources = 0
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ.")
            return 0

        loss = to_share * RESOURCE_LOSS_PERCENTAGE
        transferred = to_share - loss
        print(f"[–£—Ä–æ–≤–µ–Ω—å {self.level_number}] –ø–µ—Ä–µ–¥–∞—ë—Ç {transferred:.1f} —Ä–µ—Å—É—Ä—Å–æ–≤ (–ø–æ—Ç–µ—Ä—è–Ω–æ {loss:.1f})")
        return transferred

    def check_survival(self):
        if self.resources < MIN_RESOURCE_THRESHOLD:
            self.alive = False
            print(f"‚ö†Ô∏è –£—Ä–æ–≤–µ–Ω—å {self.level_number} –≤—ã–±—ã–ª! –†–µ—Å—É—Ä—Å–æ–≤: {self.resources:.1f}")
        return self.alive

class Game:
    def __init__(self, levels=10):
        self.levels = [Level(i + 1, random.randint(20, 50)) for i in range(levels)]

    def play(self):
        print("üéÆ –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –Ω–∞—á–∞–ª–∞—Å—å!\n")
        round_num = 1

        while any(l.alive for l in self.levels):
            print(f"\nüîÑ –†–∞—É–Ω–¥ {round_num}")
            for i in range(len(self.levels)):
                level = self.levels[i]
                if level.alive:
                    transferred = level.transfer_resources()
                    if i + 1 < len(self.levels):
                        self.levels[i + 1].receive_resources(transferred)
                    level.check_survival()
            round_num += 1
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞...")

        print("\nüíÄ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –í—Å–µ —É—Ä–æ–≤–Ω–∏ –≤—ã–±—ã–ª–∏ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
if __name__ == "__main__":
    game = Game(levels=10)
    game.play()
